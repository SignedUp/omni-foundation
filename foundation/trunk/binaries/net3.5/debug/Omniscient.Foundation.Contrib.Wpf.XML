<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Omniscient.Foundation.Contrib.Wpf</name>
    </assembly>
    <members>
        <member name="T:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter">
            <summary>
            That presenter displays an icon in the notification area. Messages sent to the presenter are displayed in a balloon that floats
            above the notification area.  It can execute commands when the user clicks or double-clicks on the notification icon and/or the 
            balloon.
            </summary>
            <remarks>
            Look at project Development\Omniscient.Foundation.Contrib.Wpf.Sample for an example on how to use the presenter.
            </remarks>
        </member>
        <member name="M:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.#ctor(System.Windows.Media.ImageSource)">
            <summary>
            Creates the presenter with a primary icon to display in the notification area.
            </summary>
            <param name="icon">The icon to use at first display.</param>
        </member>
        <member name="M:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.CreateHierarchicalMenu(System.Windows.Input.MouseButton)">
            <summary>
            Creates a contextual menu and associates it to the left- or right-click command.  Uses the <see cref="T:Omniscient.Foundation.Contrib.Wpf.StandardCommandContextMenu"/>.
            To use your own menu, with custom data template and style, call the overload that takes a menu.
            </summary>
            <param name="mouseClickButton">Either <see cref="F:System.Windows.Input.MouseButton.Left"/> or <see cref="F:System.Windows.Input.MouseButton.Right"/>.  The contextual menu will
            be associated with that button's click event.</param>
            <exception cref="T:System.ArgumentException">Raised if <paramref name="mouseClickButton"/> is neither <see cref="F:System.Windows.Input.MouseButton.Left"/> nor <see cref="F:System.Windows.Input.MouseButton.Right"/>.</exception>
        </member>
        <member name="M:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.CreateHierarchicalMenu(System.Windows.Input.MouseButton,System.Windows.Controls.ContextMenu)">
            <summary>
            Creates a contextual menu and associates it to the left- or right-click command.  That method will bind a new
            <see cref="T:Omniscient.Foundation.Contrib.Wpf.ObservableHierarchicalCommandObject"/> to the menu; essentially, you call this overload only when you want
            to provide you own template and style for the menu.  Otherwise, call the overload that takes a single argument, or pass
            a <see cref="T:Omniscient.Foundation.Contrib.Wpf.StandardCommandContextMenu"/> which has all the templates it needs to build the menu correctly.
            </summary>
            <param name="mouseClickButton">Either <see cref="F:System.Windows.Input.MouseButton.Left"/> or <see cref="F:System.Windows.Input.MouseButton.Right"/>.  The contextual menu will
            be associated with that button's click event.</param>
            <param name="menu">A context menu.  By default, you should use <see cref="T:Omniscient.Foundation.Contrib.Wpf.StandardCommandContextMenu"/>.</param>
            <exception cref="T:System.ArgumentException">Raised if <paramref name="mouseClickButton"/> is neither <see cref="F:System.Windows.Input.MouseButton.Left"/> nor <see cref="F:System.Windows.Input.MouseButton.Right"/>.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if <paramref name="menu"/> is null.</exception>
        </member>
        <member name="M:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.SetIcon(System.Windows.Media.ImageSource)">
            <summary>
            Sets the icon to a new image.
            </summary>
            <param name="icon">The icon to display in the notification area</param>
        </member>
        <member name="M:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.WriteMessage(System.Object)">
            <summary>
            Displays a message in a balloon that floats above the notification area.  The user can click that balloon, executing
            the <see cref="P:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.BalloonClickCommand"/> command.
            </summary>
            <param name="message">A message to display.  The presenter will call ToString() on that object.  If null, does nothing.</param>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.LeftClickCommand">
            <summary>
            Gets or sets the command to run when the user left-clicks the icon.  This will execute even when it's double-clicked.
            </summary>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.LeftDoubleClickCommand">
            <summary>
            Gets or sets the command to run when the user left-double-clicks the icon.  This will also execute the LeftClick command.
            </summary>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.RightClickCommand">
            <summary>
            Gets or sets the command to run when the user right-clicks the icon.  This will execute even when it's double-clicked.
            </summary>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.RightDoubleClickCommand">
            <summary>
            Gets or sets the command to run when the user right-double-clicks the icon.  This will also execute the RightClick command.
            </summary>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.BalloonClickCommand">
            <summary>
            Gets or sets the command to run when the user clicks the message balloon.
            </summary>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.Name">
            <summary>
            Gets the name of the presenter.
            </summary>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.NotifyIconPresenter.RequiresUserInput">
            <summary>
            Returns True.
            </summary>
        </member>
        <member name="T:Omniscient.Foundation.Contrib.Wpf.StandardCommandContextMenu">
            <summary>
            Interaction logic for StandardCommandContextMenu.xaml
            </summary>
            <summary>
            StandardCommandContextMenu
            </summary>
        </member>
        <member name="M:Omniscient.Foundation.Contrib.Wpf.StandardCommandContextMenu.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Omniscient.Foundation.Contrib.Wpf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Omniscient.Foundation.Contrib.Wpf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
